name: Release

on:
  push:
    branches: [ main, master ]

jobs:
  tag:
    name: Tag repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Bump version
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          dry_run: true

      - name: Commit CHANGELOG and tag
        if: ${{ steps.tag-version.outputs.release_type != '' }}
        run: |
          git config --local user.email "platform@basistheory.com"
          git config --local user.name "github-actions[bot]"
          echo "${{ steps.tag-version.outputs.changelog }}" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore(release): upating changelog for ${{ steps.tag-version.outputs.new_tag }} [skip ci]" || echo "Nothing to update"
          git tag ${{ steps.tag-version.outputs.new_tag }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.tag-version.outputs.release_type != '' }}
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_PAT }}
          branch: ${{ github.ref }}
          tags: true

  release:
    name: Release
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.5.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_PAT }}
